###! Copyright (c) 2013 Brandon Aaron (http://brandon.aaron.sh)
# Licensed under the MIT License (LICENSE.txt).
#
# Version: 3.1.4
# Modified to include the raw delta and lowest delta as well
#
# Requires: 1.2.2+
###

((factory) ->
  if typeof define == 'function' and define.amd
    # AMD. Register as an anonymous module.
    define [ 'jquery' ], factory
  else if typeof exports == 'object'
    # Node/CommonJS style for Browserify
    module.exports = factory
  else
    # Browser globals
    factory jQuery
  return
) ($) ->
  toFix = [
    'wheel'
    'mousewheel'
    'DOMMouseScroll'
    'MozMousePixelScroll'
  ]
  toBind = if 'onwheel' of document or document.documentMode >= 9 then [ 'wheel' ] else [
    'mousewheel'
    'DomMouseScroll'
    'MozMousePixelScroll'
  ]
  lowestDelta = undefined
  lowestDeltaXY = undefined

  handler = (event) ->
    orgEvent = event or window.event
    args = [].slice.call(arguments, 1)
    delta = 0
    deltaX = 0
    deltaY = 0
    absDelta = 0
    absDeltaXY = 0
    rawDelta = 0
    fn = undefined
    event = $.event.fix(orgEvent)
    event.type = 'mousewheel'
    # Old school scrollwheel delta
    if orgEvent.wheelDelta
      delta = orgEvent.wheelDelta
    if orgEvent.detail
      delta = orgEvent.detail * -1
    # At a minimum, setup the deltaY to be delta
    deltaY = delta
    # Firefox < 17 related to DOMMouseScroll event
    if orgEvent.axis != undefined and orgEvent.axis == orgEvent.HORIZONTAL_AXIS
      deltaY = 0
      deltaX = delta * -1
    # New school wheel delta (wheel event)
    if orgEvent.deltaY
      deltaY = orgEvent.deltaY * -1
      delta = deltaY
    if orgEvent.deltaX
      deltaX = orgEvent.deltaX
      delta = deltaX * -1
    # Webkit
    if orgEvent.wheelDeltaY != undefined
      deltaY = orgEvent.wheelDeltaY
    if orgEvent.wheelDeltaX != undefined
      deltaX = orgEvent.wheelDeltaX * -1
    rawDelta = delta
    # Completely ignore if delta is 0
    # have had it happen with erratic input
    if delta == 0
      return
    # Look for lowest delta to normalize the delta values
    absDelta = Math.abs(delta)
    if !lowestDelta or absDelta < lowestDelta
      lowestDelta = absDelta
    absDeltaXY = Math.max(Math.abs(deltaY), Math.abs(deltaX))
    if !lowestDeltaXY or absDeltaXY < lowestDeltaXY
      lowestDeltaXY = absDeltaXY
    # Get a whole value for the deltas
    fn = if delta > 0 then 'floor' else 'ceil'
    delta = Math[fn](delta / lowestDelta)
    deltaX = Math[fn](deltaX / lowestDeltaXY)
    deltaY = Math[fn](deltaY / lowestDeltaXY)
    # Add event and delta to the front of the arguments
    args.unshift event, delta, deltaX, deltaY, rawDelta, lowestDelta
    ($.event.dispatch or $.event.handle).apply this, args

  if $.event.fixHooks
    i = toFix.length
    while i
      $.event.fixHooks[toFix[--i]] = $.event.mouseHooks
  $.event.special.mousewheel =
    setup: ->
      `var i`
      if @addEventListener
        i = toBind.length
        while i
          @addEventListener toBind[--i], handler, false
      else
        @onmousewheel = handler
      return
    teardown: ->
      `var i`
      if @removeEventListener
        i = toBind.length
        while i
          @removeEventListener toBind[--i], handler, false
      else
        @onmousewheel = null
      return
  $.fn.extend
    mousewheel: (fn) ->
      if fn then @bind('mousewheel', fn) else @trigger('mousewheel')
    unmousewheel: (fn) ->
      @unbind 'mousewheel', fn
  return

# ---
# generated by js2coffee 2.2.0